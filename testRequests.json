{
  "GET": [
    {
      "url": "http://localhost:3000/api/Orders",
      "expected response": "Should return array of orders"
    },
    {
      "url": "http://localhost:3000/api/Orders/:orderId",
      "expected response": "Should return order by this orderId",
      "handle error": "If there is no order should return {Error: 'Order with this id is not found'}"
    },
    {
      "url": "http://localhost:3000/api/Orders/:orderId/products",
      "expected response": "Should return array of products of order by this orderId"
    }
  ],
  "POST": [
    {
      "url": "http://localhost:3000/api/Orders",
      "requestBody": {
        "createdAt": "10.03.2020",
        "shippedAt": "15.03.2020",
        "status": "Pending",
        "ZIP": "546953",
        "region": "Polotsk",
        "country": "Belarus",
        "firstName": "Vitali",
        "lastName": "Skrabatun",
        "address": "Independence street 25",
        "phone": "+37533565689",
        "email": "myemail@gmail.com"        
      },
      "expected response": "Should return new created order with it id"
    },
    {
      "url": "http://localhost:3000/api/OrderProducts",
      "requestBody": {
        "orderId": "1",
        "productName": "Button",
        "price": "50",
        "quantity": "10"      
      },
      "expected response": "Should return new created product of the order with it (product) id"
    }
  ],
  "PUT": [
    {
      "url": "http://localhost:3000/api/Orders/:orderId",
      "requestBody": {
        "shippingAddress": {
          "firstName": "Julia",
          "address": "Obere Str. 57",
          "ZIP": "12209",
          "region": "Germany" ,      
          "country": "Germany"
        },
        "customerInfo": {
          "firstName": "Julia",
          "lastName": "Green",
          "address": "Obere Str. 57",
          "phone": "030-0074321",
          "email": "Maria.Anders@company.com"          
        }               
      },
      "expected response": "Should return this order with new modified data",
      "handle error": "If there is no order should return {Error: 'Unable to insert new data. Order with this id is not found'}"
    }
  ],
  "DELETE": [
    {
      "url": "http://localhost:3000/api/Orders/:orderId",
      "expected response": "Should return result recordset with field 'rowsAffected'",
      "handle error": "If there is no order should return {Error: 'Unable to delete order. Order with this id is not found'}"
    },
    {
      "url": "http://localhost:3000/api/OrderProducts/:orderId/:productId",
      "expected response": "Should return result recordset with field 'rowsAffected'",
      "handle error": "If there is no product of order should return {Error: 'Unable to delete product of the order. Product or order with it's id is not found'}"
    }
  ]
}